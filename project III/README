Project 3, Group 45
Zhengjie Miao, zm2248
Yiqing Cui, yc3121

Submitting Files:
	group45-proj3.tar.gz, which contains 1 source code file run.py
	INTEGRATED-DATASET.csv
	README
	example-run.txt
	(optional) code_mapping.txt, contains the description for each violation code

Describe the Data Set:
	(a) which NYC Open Data data set(s) you used to generate the INTEGRATED-DATASET file
		We chose DOHMH New York City Restaurant Inspection Results as the original dataset ( https://nycopendata.socrata.com/Health/DOHMH-New-York-City-Restaurant-Inspection-Results/43nn-pn8j ) to generate our INTEGRATED-DATASET.csv for deriving the high association rules. The original dataset contains 437K rows and 18 columns. Each row presents a record of a restaurant inspection, including the basic informations of the restaurant, inspection, violation, grade, and adjudication information.

	(b) what (high-level) procedure you used to map the original NYC Open Data data set(s) into your INTEGRATED-DATASET file
		Since there are many columns containing repeatitive information like the location of the restaurant, and each row presents one inspection record of a restaurant, we decided to reserve only the column of violation and restaurant ID, then grouped the data by restaurant ID. Next, we filtered the restaurants with violation types less than 2 (at least two items in a basket). Finally the INTEGRATED-DATASET.csv contains 19552 rows, and each row contains the violation codes of one restaurant in multiple inspections.

	(c) what makes your choice of INTEGRATED-DATASET file interesting (in other words, justify your choice of NYC Open Data data set(s)). 
		This dataset is massive and it's non-obvious to find out any meaningful patterns from this data, which is why we need to apply our association rule mining algorithm. Moreover, we believe that the problem itself is interesting: for these restaurants that violate the regulations frequently, the violations may be related and we want to know which violations are related and to what extent.


How to run:
	Unzip file group45-proj3.tar.gz. Run the python program by:
	python run.py INTEGRATED-DATASET.csv <min_sup> <min_conf>


Project Design:
	The implementation of the algorithm is an original a-priori algorithm.
	
	The algorithm is divided into 2 parts basically. The first part is about the large itemsets and the second part is about the association rules.
	
	(a) The large itemsets algorithm is the same as the algorithm in Section 2.1 of the Agrawal and Srikant paper in VLDB 1994. We start from 1-itemset, then we generate L_k+1 itemset from L_k itemset. After we get L_k+1 itemset, we compare each transaction of the database with the L_k+1 itemset to get the occurrence of each item in L_k+1 itemset and remove items with too low occurrence. Finally we gather these large itemset together and output the final result.
	(b) The association rule algorithm is straighforward. For every large itemset, for each item in that itemset, we check whether it exists an association rule from the left part to current item. Finally we get the association rules with high conf.
	
	Both of the implementation is in run.py, which mainly contains a class called Solution. The class defines lots of methods including initialization, load data and some other helper function like subset and apriori_gen for the main process method. 
	

The Command Line Specification
	python run.py INTEGRATED-DATASET.csv 0.2 0.6

	We discuss a few of interesting rules in example-run.txt generated by the sample command line specification above. We found some violation types are highly related and thus it may help the restaurants and the government improve the food sanitation and safety. Please refer to code_mapping.txt for description of each violation code.

	Here we list some of interesting observations.

	1)
	[04L,04N,06D] => [08A] (Conf: 0.990253853128, Supp: 0.223455400982)
	[04L,04N] => [08A] (Conf: 0.98877932676, Supp: 0.297463175123)
	[04H,04L] => [08A] (Conf: 0.974346905154, Supp: 0.21174304419)
	[04M] => [08A] (Conf: 0.965939220885, Supp: 0.242225859247)
	[04L] => [08A] (Conf: 0.965687222115, Supp: 0.510996317512)
	[04N] => [08A] (Conf: 0.944265213038, Supp: 0.434124386252)
	[04N] => [04L] (Conf: 0.654355323173, Supp: 0.300838788871)
	[04H] => [04L] (Conf: 0.647614692882, Supp: 0.21731792144)

	04H means "Raw, cooked or prepared food is adulterated, contaminated, cross-contaminated, or not discarded in accordance with HACCP plan.",
	04L means "Evidence of mice or live mice present in facility's food and/or non-food areas.", 
	04M means "Live roaches present in facility's food and/or non-food areas.",
	04N means "Filth flies or food/refuse/sewage-associated (FRSA) flies present in facility's food and/or non-food areas. Filth flies include house flies, little house flies, blow flies, bottle flies and flesh flies. Food/refuse/sewage-associated flies include fruit flies, drain flies and Phorid flies.",
	06C means "Food not protected from potential source of contamination during storage, preparation, transportation, display or service.",
	08A means "Facility not vermin proof. Harborage or conditions conducive to attracting vermin to the premises and/or allowing vermin to exist."

	These rules reveal that "Facility not vermin proof", mice or flies found in the restaurant, or food is found not protected from contamination, are highly related . This is reasonable and it indicates that the it's likely that once a restaurant fail to protect food from potential source of contamination, vermin will be able to access the food areas.  

	2)
	[04H,04L] => [10F] (Conf: 0.959049188044, Supp: 0.208418576105)
	[04M] => [10F] (Conf: 0.959004691006, Supp: 0.24048690671)
	[04H] => [10F] (Conf: 0.942691662856, Supp: 0.316335924714)
	[10B] => [10F] (Conf: 0.920962199313, Supp: 0.548281505728)
	[06A] => [08A] (Conf: 0.792530378842, Supp: 0.22683101473)

	For 04H, 04M, 04L, 04N, refer to above part.
	10B means "Plumbing not properly installed or maintained; anti-siphonage or backflow prevention device not provided where required; equipment or floor not properly drained; sewage disposal system in disrepair or not functioning properly.",
	10F means "Non-food contact surface improperly constructed. Unacceptable material used. Non-food contact surface or equipment improperly maintained and/or not properly sealed, raised, spaced or movable to allow accessibility for cleaning on all sides, above and underneath the unit."
	06A means "Personal cleanliness inadequate. Outer garment soiled with possible contaminant.  Effective hair restraint not worn in an area where food is prepared."
	
	These rules are related to the facilities and the sanitation of the restaurant, and revealed that if the food are improperly stored, it's very likely that the non-food contact equipments also violate regulations. It's interesting that personal cleanliness can derive "Facility not vermin proof".


	3)
	[02B] => [10F] (Conf: 0.926831884991, Supp: 0.441847381342)
	[02B] => [02G] (Conf: 0.800879733934, Supp: 0.381802373159)
	[02G] => [08A] (Conf: 0.771371129875, Supp: 0.490589198036)
	[02G] => [02B] (Conf: 0.600321672698, Supp: 0.381802373159)

	02B means "Hot food item not held at or above 140Âº F",
	02G means "Cold food item held above 41Âº F (smoked fish and reduced oxygen packaged foods above 38 ÂºF) except during necessary preparation."

	These rules show that holding foods at certain temperature are related, and also related to the cleaness.
